version: '3.8'
services:
    xtrabackup:
      image: perconalab/percona-xtrabackup:2.4
      profiles: 
        - xtrabackup
      volumes:
        - ./volumes/mysql/:/var/lib/mysql/
        
        - ./volumes/tmp/backup/:/backup/
      command: ["/usr/bin/xtrabackup -H192.168.33.222 -P3306 -u root -p**Admin** --backup --datadir=/var/lib/mysql/ --target-dir=/backup"]
      
    
    mysql:
      image: percona/percona-server:5.7
      #container_name: bx-mysql
      hostname: mysql
      healthcheck:
        test: "/usr/bin/mysql --user=root --password=${BX_MYSQL_ROOT_PASS} --execute \"SHOW DATABASES;\""
        interval: 2s
        timeout: 20s
        retries: 10
      networks:
        - bitrix
      ports:
        - "3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: ${BX_MYSQL_ROOT_PASS}
        MYSQL_DATABASE: ${BX_MYSQL_DB}
        MYSQL_USER: bitrix
        MYSQL_PASSWORD: ${BX_MYSQL_BITRIX_PASS}
        TZ: Europe/Moscow
      command: ['--innodb_strict_mode=OFF','--character-set-server=utf8', '--collation-server=utf8_unicode_ci',
         '--skip-character-set-client-handshake', '--sql-mode=']

    web:
      build:
        context: ./services/web
        dockerfile: dockerfile
        args: 
          USER_ID: $USER_ID
          USER_GID: $USER_GID
      hostname: web
      #ports:
        #- 8088:80
        #- 8893-8895:8893-8895/tcp
        #- 443:443
      networks:
        - bitrix
#          ipv4_address: 172.16.16.4
      depends_on:
        - mysql
        - push
      volumes:
        - ./services/web/logs/crond:/var/log/crond
        - ./services/web/logs/xdebug:/var/log/xdebug
        - ./services/web/logs/httpd:/var/log/httpd
        - ./services/web/logs/php:/var/log/php
        - ./services/web/logs/supervisor:/var/log/supervisor
        - ./services/web/cron/bitrix:/etc/cron.d/bitrix
        - ./services/web/supervisor/supervisord.ini:/etc/supervisord.d/supervisord.ini
        - ./services/web/php.d/config/zx-bitrix.ini:/etc/php.d/zx-bitrix.ini
      #command: ["/root/entry-web.sh"]
      environment:
        USER_ID: $USER_ID
        USER_GID: $USER_GID
      entrypoint: [ "/entrypoint.sh" ]
      #command: ["/usr/bin/supervisord"]
    
    nginx:
      build:
        context: ./services/web/nginx
        args: 
          USER_ID: $USER_ID
          USER_GID: $USER_GID
          BITRIX_PORT: $BITRIX_PORT
          BITRIX_SSL_PORT: $BITRIX_SSL_PORT
      ports:
        - $BITRIX_PORT:80
        - 443:443
        #открываем, если нужен доступ снаружи для push
        #- 8893-8895:8893-8895
      networks:
        - bitrix
  #          ipv4_address: 172.16.16.4
      depends_on:
        - web
      environment:
        USER_ID: $USER_ID
        USER_GID: $USER_GID
        BITRIX_PORT: $BITRIX_PORT
        BITRIX_SSL_PORT: $BITRIX_SSL_PORT
      volumes:
        - ./services/web/logs/nginx:/var/log/nginx
      #entrypoint: [ "/docker-entrypoint.d/entry.sh" ]
      

    redis:
      build: 
        context: ./services/redis
        dockerfile: dockerfile
      networks:
        - bitrix
      volumes:
        - redis-sock:/tmp/
        #- ./services/tmp/:/tmp/
        - ./services/redis/config/redis.conf:/usr/local/etc/redis/redis.conf 
    
    push:
      build:
        context: ./services/push
        dockerfile: dockerfile
        args: 
          USER_ID: $USER_ID
      hostname: push
      environment:
        USER_ID: $USER_ID
      volumes:
        - redis-sock:/tmp/
        #- ./services/tmp/:/tmp/
        - ./services/push/logs/:/var/log/
        - ./services/push/supervisor/supervisord.ini:/etc/supervisord.d/supervisord.ini
      #ports:
        #- 8010-8015:8010-8015/tcp
        #- 9010-9011:9010-9011/tcp
      networks:
        - bitrix
#          ipv4_address: 172.16.16.4
      depends_on:
        - redis
      entrypoint:  [ "/entrypoint.sh" ]
    
    haproxy:
      image: haproxy:alpine
      profiles: 
        - haproxy
      #ports:
        #- $BITRIX_PORT:8088
        #- $BITRIX_SSL_PORT:443
      depends_on:
        - nginx
      restart:
        unless-stopped 
      volumes:
        - ./services/haproxy/haproxy.conf:/usr/local/etc/haproxy/haproxy.cfg
        - ./services/haproxy/ssl:/ssl
      networks:
        - bitrix
    
    phpmyadmin:
      image: phpmyadmin/phpmyadmin:latest
      ports:
        - 33333:80
      networks:
        - bitrix
      environment:
 #      PMA_ARBITRARY: 1
        PMA_HOST: mysql
        PMA_PORT: 3306
        PMA_USER: root
        PMA_PASSWORD: $BX_MYSQL_ROOT_PASS
#       PMA_ABSOLUTE_URI: /phpmyadmin

    

volumes: 
  redis-sock:      
    

networks:
  bitrix:
#    name: bitrix_net
#    ipam:
#      config:
#        - subnet: 172.16.16.0/24

    